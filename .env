# When relayer is inside docker

NGINX_AUTH_SECRET="FNiPGdfBuvqToL7PHu4EHzu7ehSr8+L5yV2kkxSutSo"
RUST_LOG=info


# DATABASE_URL=postgres://relayer:relayer@database:5432/relayer
# REDIS_HOSTNAME=redis://default:foobared@redis-server/0
# POSTGRESQL_URL=postgresql://postgres:my_password@postgresql-master:5432/my_database
# BROKER=kafka:29092
# QUESTDB_URL=postgresql://quest:my_password@questdb:8812/qdb
# QUESTDB_INFLUX_URL=questdb:9009

# When relayer is inside host machine
# REDIS_HOSTNAME=redis://default:foobared@localhost/0
# DATABASE_URL=postgres://relayer:relayer@localhost:5433/relayer
# POSTGRESQL_URL=postgresql://postgres:my_password@localhost:5432/my_database
# QUESTDB_URL=postgresql://quest:my_password@localhost:8812/qdb
# QUESTDB_INFLUX_URL=127.0.0.1:9009
# BROKER=localhost:9092

# When server is external host machine
REDIS_HOSTNAME=redis://default:foobared@twilight.rest/0
DATABASE_URL=postgres://relayer:relayer@twilight.rest:5433/relayer
POSTGRESQL_URL=postgresql://postgres:my_password@twilight.rest:5432/my_database
QUESTDB_URL=postgresql://quest:my_password@twilight.rest:8812/qdb
QUESTDB_INFLUX_URL=127.0.0.1:9009
BROKER=twilight.rest:9092

# bitmex socket connection url

BITMEX_BTC_SOCKET_ORDERBOOK_URL=wss://ws.bitmex.com/realtime?subscribe=orderBookL2_25:XBTUSD
BITMEX_BTC_SOCKET_INSTRUMENT_URL=wss://ws.bitmex.com/realtime?subscribe=instrument

# Binance BTC socket URL

# https://binance-docs.github.io/apidocs/spot/en/#individual-symbol-mini-ticker-stream

# A single connection to stream.binance.com is only valid for 24 hours; expect to be disconnected at the 24 hour mark

# The websocket server will send a ping frame every 3 minutes. If the websocket server does not receive a pong frame back from the connection within a 10 minute period, the connection will be disconnected. Unsolicited pong frames are allowed.

BINANCE_BTC_SOCKET=wss://stream.binance.com:9443/ws/btcusdt@miniTicker

# Binance BTC API URL

BINANCE_BTC_API=https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT

# coincap API 2.0 BTC Price Socket URL

# https://docs.coincap.io/#37dcec0b-1f7b-4d98-b152-0217a6798058

COINCAP_BTC_SOCKET=wss://ws.coincap.io/prices?assets=bitcoin


RelayerVersion=1.000
SnapshotVersion=1.001

# RPC loadbalance mode
# RPC_QUEUE_MODE=KAFKA
# RPC_QUEUE_MODE=AERON
RPC_QUEUE_MODE=DIRECT

#RPC Thread Count
RPC_SERVER_THREAD=15
RPC_SERVER_SOCKETADDR=0.0.0.0:3032


KAFKA_STATUS=Enabled

# kafka topics
# Topics should be already created before running the application
# kafkalib::kafka_topic::kafka_new_topic("BinanceMiniTickerPayload");
# kafkalib::kafka_topic::kafka_new_topic("CLIENT-REQUEST");
# kafkalib::kafka_topic::kafka_new_topic("TraderOrderEventLog1");
# kafkalib::kafka_topic::kafka_new_topic("LendOrderEventLog1");
# kafkalib::kafka_topic::kafka_new_topic("LendPoolEventLog1");

PRICE_LOG=BinanceMiniTickerPayload
RPC_CLIENT_REQUEST=CLIENT-REQUEST

TRADERORDER_EVENT_LOG=CoreEventLogTopic
LENDORDER_EVENT_LOG=CoreEventLogTopic
LENDPOOL_EVENT_LOG=CoreEventLogTopic
CORE_EVENT_LOG=CoreEventLogTopic
SNAPSHOT_LOG=SnapShotLogTopic

# relayer's snapshot path
RELAYER_SNAPSHOT_FILE_LOCATION=/usr/bin/relayer_snapshot/snapshot-version

# snapshot file location path for utxo storage
SNAPSHOT_FILE_LOCATION=./snapshot_storage/map

# start taking snapshot after given blocks procced
# snapshot blockheight checkpoint
SNAPSHOT_BLOCKHEIGHT_THRESHOLD=1000

# start taking snapshot after given miliseconds
SNAPSHOT_DURATION_THRESHOLD=0


WALLET_PROGRAM_PATH=./relayerprogram.json
# ZKOS_SERVER_URL=http://165.232.134.41:3030
ZKOS_SERVER_URL=http://147.182.235.183:3030
# RELAYER_RPC_SERVER_URL=http://ec2-3-0-28-9.ap-southeast-1.compute.amazonaws.com/clientapi

# for enabling zkos chain transaction
ENABLE_ZKOS_CHAIN_TRANSACTION=true

# for enabling zkos command transaction file save fn
ENABLE_ZKOS_CHAIN_TRANSACTION_FILES_WRITE_FOR_TX_RESPONSE=true


# Relayer Wallet Key Management
RELAYER_WALLET_IV=your_password_he
RELAYER_WALLET_SEED="UTQTkXOhF+D550+JW9A1rEQaXDtX9CYqbDOFqCY44S8ZYMoVzj8tybCB/Okwt+pblM0l3t9/eEJtfBpPcJwfZw=="
RELAYER_WALLET_PATH=/usr/bin/relayer_wallet
RELAYER_WALLET_PASSWORD=your_password_he
RUST_BACKTRACE=1